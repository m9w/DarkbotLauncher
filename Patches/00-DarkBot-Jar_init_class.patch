diff --git a/src/main/java/Init.java b/src/main/java/Init.java
new file mode 100644
index 00000000..2a6260e0
--- /dev/null
+++ b/src/main/java/Init.java
@@ -0,0 +1,52 @@
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.prefs.Preferences;
+import java.util.stream.Collectors;
+import java.util.zip.ZipFile;
+
+
+public class Init {
+    public static void main(String[] args) throws IOException, InterruptedException {
+        Preferences.userRoot().node("/eu/darkbot/verifier").putLong("DBOT_FIRST_RUN", Long.MAX_VALUE);
+        File container = new File(Init.class.getProtectionDomain().getCodeSource().getLocation().getPath());
+        try (ZipFile zipFile = new ZipFile(container)) {
+            zipFile.entries().asIterator().forEachRemaining(zipEntry -> {
+                String name = zipEntry.getName();
+                if (name.equals("Init.class") || name.startsWith("META-INF")) return;
+                name = "core/" + name;
+                if (zipEntry.isDirectory()) new File(name).mkdirs();
+                else try (OutputStream os = new FileOutputStream(name)) {
+                    zipFile.getInputStream(zipEntry).transferTo(os);
+                } catch (IOException ignored) {
+                }
+            });
+        }
+
+        String java = System.getProperty("java.home") + "/bin/javaw";
+
+        List<String> params = System.getProperties().entrySet().stream().filter(it -> {
+            char x = it.getKey().toString().charAt(0);
+            return x < 'a' || x > 'z';
+        }).map(it -> "-D" + it.getKey() + "=" + it.getValue()).collect(Collectors.toList());
+
+        List<String> argsProc = new ArrayList<>(List.of(java));
+
+        String dbg = System.getProperty("dbg");
+        if (dbg != null) {
+            String port = dbg.split(":")[0];
+            boolean wait = dbg.endsWith("y");
+            argsProc.add("-agentlib:jdwp=transport=dt_socket,server=y,suspend=+" + (wait ? "y" : "n") + "+,address=*:" + port);
+        }
+        argsProc.addAll(params);
+
+        argsProc.addAll(List.of("-cp", "\"core/dependencies.jar;core/\""));
+
+        argsProc.add(new File("bot.properties").isFile() ? "@bot.properties" : "com.github.manolo8.darkbot.Bot");
+        argsProc.addAll(List.of(args));
+        Runtime.getRuntime().exec(String.join(" ", argsProc));
+    }
+}
