diff --git a/src/main/java/Init.java b/src/main/java/Init.java
new file mode 100644
index 00000000..78fffa14
--- /dev/null
+++ b/src/main/java/Init.java
@@ -0,0 +1,32 @@
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.util.Arrays;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.zip.ZipFile;
+
+public class Init {
+	public static void main(String[] args) throws IOException, InterruptedException {
+		File container = new File(Init.class.getProtectionDomain().getCodeSource().getLocation().getPath());
+		System.out.println(container);
+		try (ZipFile zipFile = new ZipFile(container)) {
+			zipFile.entries().asIterator().forEachRemaining(zipEntry -> {
+				String name = zipEntry.getName();
+				if (name.equals("Init.class") || name.startsWith("META-INF")) return;
+				if (zipEntry.isDirectory()) new File(name).mkdirs();
+				else try (OutputStream os = new FileOutputStream(name)) {
+					zipFile.getInputStream(zipEntry).transferTo(os);
+				} catch (IOException ignored) {
+				}
+			});
+		}
+
+		String java = System.getProperty("java.home") + "/bin/javaw";
+		List<String> s = new ArrayList<>();
+		s.addAll(Arrays.asList(java, "-cp", "\".core/API.jar;.core/\"", "com.github.manolo8.darkbot.Bot"));
+		s.addAll(Arrays.asList(args));
+		Runtime.getRuntime().exec(String.join(" ", s));
+	}
+}
